@page "/contact"
@inject IConfiguration Configuration
@using CentroEspecialidadesDentales.Domain.Entities
@using System.ComponentModel.DataAnnotations

<h1 class="contact-title">Contacto</h1>
<div class="contact-container">
    <div class="contact-info">
        <h2>Información de Contacto</h2>
        <p><strong>Dirección:</strong> @contactInfo.Address</p>
        <p><strong>Teléfono:</strong> @contactInfo.PhoneNumber</p>
        <p><strong>Email:</strong> <a href="mailto:@contactInfo.Email">@contactInfo.Email</a></p>
        <p><strong>Horario:</strong> @contactInfo.Hours</p>
    </div>

    <div class="contact-form">
        <h2>Envíanos un Mensaje</h2>
        <EditForm Model="@contactForm" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="name">Nombre:</label>
                <InputText id="name" class="form-control" @bind-Value="contactForm.Name" />
                <ValidationMessage For="@(() => contactForm.Name)" />
            </div>

            <div class="form-group">
                <label for="email">Email:</label>
                <InputText id="email" type="email" class="form-control" @bind-Value="contactForm.Email" />
                <ValidationMessage For="@(() => contactForm.Email)" />
            </div>

            <div class="form-group">
                <label for="message">Mensaje:</label>
                <InputTextArea id="message" class="form-control" @bind-Value="contactForm.Message" />
                <ValidationMessage For="@(() => contactForm.Message)" />
            </div>

            <button type="submit" class="btn btn-primary">Enviar</button>
        </EditForm>
    </div>
</div>

@code {
    private ContactInfo contactInfo;
    private ContactFormModel contactForm = new ContactFormModel();

    protected override void OnInitialized()
    {
        contactInfo = Configuration.GetSection("ContactInfo").Get<ContactInfo>();
    }

    private void HandleValidSubmit()
    {
        // Handle form submission logic here, e.g., send an email or save to a database.
        Console.WriteLine("Form submitted successfully!");
    }

    private class ContactFormModel
    {
        [Required(ErrorMessage = "El nombre es obligatorio.")]
        public string Name { get; set; }

        [Required(ErrorMessage = "El email es obligatorio.")]
        [EmailAddress(ErrorMessage = "El email no es válido.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "El mensaje es obligatorio.")]
        public string Message { get; set; }
    }

    private class ContactInfo
    {
        public string Address { get; set; }
        public string PhoneNumber { get; set; }
        public string Email { get; set; }
        public string Hours { get; set; }
    }
}
